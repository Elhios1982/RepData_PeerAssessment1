points(may, pch = 24, col = "blue")
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "blue", pch = 17)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", c(17,8), c("blue", red), c("May", "Other Months"))
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality), lty = 2)
abline(v = median(airquality$Wind), lty = 2)
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
rm(list = ls())
library()
library("swirl")
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p["formula"]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
rm(list=ls())
library("swirl")
swirl()
sample(colors(),10)
pal <. colorRamp(c("red", "blue"))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(6)
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
rm(list=ls())
library("swirl")
swirl()
cols <- brewer.pal(3, "BuGN")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
rm(list=ls())
library("swirl")
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ . ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = paste("point", "smooth"), facets = .~drv )
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv )
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = lm)
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color=drv))
g+geom_point(aes(color = drv), labs(title="Swirl Rules!"), labs(x="Displacement", y = "Hwy Mileage"))
g+geom_point(aes(color = drv), labs(title="Swirl Rules!"), labs("Displacement", "Hwy Mileage"))
g+geom_point(aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(data = testdata, aes(x=myx, y=myy))
g <- ggplot(data = testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(data = mpg, aes(x=displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")+labs(x="Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
library("swirl")
rm(list=ls())
swirl()
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut
)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut)+geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut)+geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoint <- quantile(diamonds$carat, seq(0,1, legth = 4), na.rm = TRUE)
cutpoint <- quantile(diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g+geom_point(alpha=1/3, facet_grid(cut ~ car2))
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(data = diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?BodyWeight
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
?geom
?ggplot
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
print(p)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
rm(list=ls())
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
?points
?text
?axis()
?lpoints
?lines
?lpoints
rm(ls=list())
rm(list=ls()
)
library("swirl")
swirl()
dist(dataFrame)
play()
distxy
nxt
nxt()
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
rm(list=ls())
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, '|', fixed = TRUE)
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative,na.rm = TRUE)
play()
exit()
0
rm(list=ls())
library(swirl)
swirl()
sum(mean(negative, na.rm = TRUE))
mean(negative, na.rm = TRUE)
play()
head(pm1)
strsplit(cnames, '|', fixed = TRUE)
names()
nxt()
dates <- pm1$V4
play()
cnames2 <- strsplit(cnames, '|', fixed = TRUE)
cnames2
names(pm1) <- cnames2[[1]][wcol]
head(pm1)
nxt()
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
swirl()
rm(list = ls())
rm(list=ls())
library("swirl")
swirl()
rm(list=ls())
library("swirl")
swirl()
dim(pm0)
head(pm0)
names
cnames
strsplit(cnames, '|', fixed = TRUE)
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
x0
str(x0)
mean(is.na(x0))
names(pm1)<- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates<- pm1$Date
str(dates)
dates <- as.Date(as.character(dates) "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52), mrg[,3]))
with(mrg,plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1,52), rep(2,52), mrg[,2], mrg[,3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y,]
library(swirl)
rm(list = ls())
swirl()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = .4, col = "red")
5
play()
abline(h = .05, col = "green")
nxt()
12
abline(h = .05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch = 19, cex = 2)
0
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
bye()
rm(list=ls())
library("swirl")
swirl()
getwd()
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
read.csv("activity.zip")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
read.table("activity.zip", header = T, sep = ",")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
source('C:/coursera/data-science/RepData_PeerAssessment1/PA1_template.R')
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.zip", header = T, quote="\"", sep = ",")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
df
df <- read.table("activity.zip", header = T, quote="\"", sep = ",")
?read.table
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.zip", header = T, quote="\"", sep = ",", na.strings = "NA")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
DF
df
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.zip", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
df
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.csv", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
df
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.csv.zip", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
df
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- tbl_df(read.table("activity.csv.zip", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character"))
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
df
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- tbl_df(read.table("activity.csv.zip", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character"))
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.csv.zip", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table("activity.csv.zip", header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
rm(list=ls())
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
zip.file <- c("activity.csv", "activity.zip")
## Loading and preprocessing the data
df <- read.table(zip.file.extract(zip.file), header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
zip.file <- c("activity.csv", "activity.zip")
## Loading and preprocessing the data
df <- read.table(unz(zip.file), header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
source('C:/coursera/data-science/RepData_PeerAssessment1/PA1_template.R')
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table(unz("activity.zip", "activity.csv"), header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
df
rm(list=ls())
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- read.table(unz("activity.zip", "activity.csv"), header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character")
df
library(dplyr)
setwd("C:/coursera/data-science/RepData_PeerAssessment1")
## Loading and preprocessing the data
df <- tbl_df(read.table(unz("activity.zip", "activity.csv"), header = T, quote="\"", sep = ",", na.strings = "NA", colClasses = "character"))
df
